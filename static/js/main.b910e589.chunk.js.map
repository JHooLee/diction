{"version":3,"sources":["pages/Home.js","Button.js","pages/NotFound.js","pages/Word.js","App.js","Browser.js","reportWebVitals.js","index.js"],"names":["Home","navigate","useNavigate","className","onClick","Button","children","size","color","width","handleClick","disabled","defaultProps","NotFound","Word","props","params","useParams","useSearchParams","searchParams","setSearchParams","applyActiveColor","isActive","padding","margin","background","QueryNavLink","to","location","useLocation","search","useState","selected","setSelected","wordsFiltered","words","filter","word","get","r_word","toLowerCase","includes","r_des","wrd","wrd2","wordId","arrList","index","onChange","e","target","value","map","item","placeholder","autoFocus","id","push","length","style","r_chi","r_seq","r_pos","href","r_link","App","homeMenu","url","name","state","open","showSidebar","setState","loading","fetch","then","res","json","result","this","exact","path","element","Component","Browser","basename","process","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b910e589.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport './Home.css'\r\n\r\nfunction Home(){\r\n\r\n    let navigate = useNavigate()\r\n    function handleClick(){\r\n        navigate(\"/words\")\r\n    }\r\n    \r\n    return(\r\n        <>\r\n        {/* 검색 */}\r\n        <div><br/><br/><br/><br/><br/><br/><br/><br/><br/></div>\r\n        <div className=\"home-container\">\r\n          <br/>\r\n          <a onClick={handleClick}><input className=\"filter-word\" /></a><br/>\r\n        </div>      \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Home","import React from \"react\";\r\nimport './Button.css'\r\n\r\nfunction Button({children, size, color, width, handleClick, disabled,}){\r\n\r\n    return <button disabled={disabled} onClick={handleClick} className={`Button ${size} ${color} ${width}`}>{children}</button>\r\n}\r\nexport default Button;\r\n\r\nButton.defaultProps = {\r\n    size: 'medium',\r\n    color: 'tomato',\r\n    disabled: false,\r\n}","import React from \"react\";\r\n\r\nfunction NotFound(){\r\n    return(\r\n        <h1>NOT FOUND PAGE</h1>\r\n    )\r\n}\r\n\r\nexport default NotFound","import {React, useState} from \"react\";\r\nimport { useParams, NavLink, useSearchParams, useLocation } from \"react-router-dom\";\r\n// import words from '../wordData'\r\nimport './Word.css'\r\nimport Button from \"../Button\";\r\n\r\nfunction Word(props){\r\n    const params = useParams();\r\n    let [searchParams, setSearchParams] = useSearchParams()\r\n    const applyActiveColor = ({isActive}) => (isActive? {color:'white', padding:'15px', margin:'-15px', background:'tan'}:{})\r\n\r\n    const changeQueryString = (e) => {\r\n        const filter = e.target.value\r\n        if(filter){\r\n            setSearchParams({filter})\r\n        }else{\r\n            setSearchParams({})\r\n        }\r\n    }\r\n    const QueryNavLink = ({to, children, ...props}) => {\r\n        const location = useLocation();\r\n        return <NavLink to={to + location.search} {...props}>{children}</NavLink>\r\n    }\r\n    const selectList = [\"단어\", \"뜻\", \"단어+뜻\"];\r\n    const [selected, setSelected] = useState(\"단어\");\r\n\r\n    const handleSelect = (e) => {\r\n        setSelected(e.target.value);\r\n    };\r\n    // console.log(selected)\r\n    \r\n    const wordsFiltered = props.words.filter(word => {\r\n        const filter = searchParams.get('filter')\r\n        if(!filter) return false;\r\n        if(selected==='단어'){\r\n        const wrd = word.r_word.toLowerCase()//r_word: 단어 검색\r\n        return wrd.includes(filter.toLowerCase())}\r\n        if(selected==='뜻'){\r\n            const wrd = word.r_des.toLowerCase()//r_des: 뜻 검색\r\n            return wrd.includes(filter.toLowerCase())}\r\n        if(selected==='단어+뜻'){\r\n            const wrd = word.r_word.toLowerCase()\r\n            const wrd2 = word.r_des.toLowerCase()//r_word: 단어 검색, r_des: 뜻 검색\r\n            return wrd.includes(filter.toLowerCase()) || wrd2.includes(filter.toLowerCase()) }\r\n    })\r\n\r\n    const word = wordsFiltered[params.wordId]\r\n    const arrList = []\r\n\r\n    let index = 0\r\n    return(\r\n        <>\r\n        {/* 검색 */}\r\n        <div className=\"input-container\">\r\n            <br/>\r\n            <select className=\"select-box\" \r\n                    onChange={handleSelect} \r\n                    value={selected}>\r\n                {selectList.map((item) => (\r\n                    <option className=\"select-opt\" value={item} key={item}>\r\n                      {item}\r\n                    </option>\r\n                ))}\r\n            </select>\r\n            <input className=\"filter-word\" \r\n            value={searchParams.get('filter')||\"\"} \r\n            onChange={changeQueryString} placeholder=\"search\" autoFocus/><br/>\r\n        </div>\r\n        {/* <select onChange={handleSelect} value={selected}>\r\n          {selectList.map((item) => (\r\n            <option value={item} key={item}>\r\n              {item}\r\n            </option>\r\n          ))}\r\n        </select> */}\r\n        <div className=\"search-result\">   \r\n            {wordsFiltered \r\n            .map((id) => {\r\n                arrList.push(id) \r\n                index = index+1\r\n                return(\r\n                    <div key={index}></div>\r\n                )           \r\n            })}      \r\n            <div>검색 결과 : &nbsp;&nbsp;{arrList.length} 개</div>         \r\n        </div>\r\n        <div className=\"container\">\r\n        {/* 전체 단어 */}\r\n            <div className=\"word-list\">\r\n            {wordsFiltered \r\n            .map((word, id) => {                \r\n                return(\r\n                    <QueryNavLink key={id} to={`/words/${id}`} className=\"word-item\" style={applyActiveColor}>\r\n                        <div className=\"word-list-p\">{word.r_word}{word.r_chi}<sup>{word.r_seq}</sup></div>\r\n                    </QueryNavLink>\r\n                )\r\n            })}\r\n            </div>\r\n            {/* 특정 단어 */}\r\n            {word?\r\n            <div className=\"word-card\">\r\n                <h1>{word.r_word}<sup>{word.r_seq}</sup></h1>\r\n                <h2>{word.r_chi}</h2>\r\n                <h2>{word.r_pos}</h2>\r\n                <h2>{word.r_des}</h2>\r\n                <a href={word.r_link}><Button>자세히보기</Button></a>\r\n            </div>:\r\n            <div className=\"word-card-emp\">\r\n            </div>}\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Word\r\n","import './App.css';\r\nimport React, { Component } from 'react';\r\nimport { Route, Routes } from 'react-router-dom';\r\nimport { Home, NotFound, Word } from './pages';\r\n// import Menu from './Menu'\r\n// import Sidebar from './Sidebar';\r\n// import Button from './Button'\r\n\r\nclass App extends Component {\r\n  homeMenu = [\r\n    {\r\n      url: \"/\",\r\n      name: \"HOME\"\r\n    },\r\n    {\r\n      url: \"/words\",\r\n      name: \"단어 검색\"\r\n    },\r\n    {\r\n      url: \"/wordsdes\",\r\n      name: \"설명 검색\"\r\n    },\r\n  ]\r\n  state = {\r\n    open: false\r\n  }\r\n\r\n  showSidebar = () => {\r\n    this.setState({ open: !this.state.open })\r\n  }\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      loading: true,\r\n      words: []\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    const BASE_URL = 'https://dic-jhr.herokuapp.com/api/words'\r\n    fetch(BASE_URL).then(\r\n      res => res.json()\r\n    ).then(\r\n      result => {\r\n        const { words } = result\r\n        this.setState({ loading: false, words })\r\n      }\r\n    )\r\n  }\r\n\r\n\r\n  render() {\r\n    const { words } = this.state\r\n    // const {homeMenu} = this\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        {/* <Button handleClick={this.showSidebar}>Menu</Button> */}\r\n        {/* <Sidebar open={true}>\r\n          <Menu menus={homeMenu}></Menu>\r\n        </Sidebar> */}\r\n        <Routes>\r\n          <Route exact path=\"/\" element={<Home words={words} />} />\r\n          <Route path=\"/words\" element={<Word words={words} />}>\r\n            <Route path=\":wordId\" element={<Word words={words} />} />\r\n          </Route>\r\n          {/* <Route path =\"/wordsdes\" element={<WordDes words={words}/>}>\r\n            <Route path=\":wordsdesId\" element={<WordDes/>}/>\r\n          </Route> */}\r\n          <Route path=\"*\" element={<NotFound />} />\r\n        </Routes>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import { BrowserRouter } from \"react-router-dom\";\r\nimport App from './App.js'\r\n\r\nfunction Browser(){\r\n    return(\r\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n            <App></App>\r\n        </BrowserRouter>\r\n    )\r\n}\r\n\r\nexport default Browser","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport Browser from './Browser';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Browser />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}